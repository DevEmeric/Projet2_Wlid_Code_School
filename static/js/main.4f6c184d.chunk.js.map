{"version":3,"sources":["image/gryffindor.png","image/slytherin.png","image/ravenclaw.png","image/hufflepuff.png","image/background/backgroundCastle.jpg","image/volumeOn.png","image/volumeOff.png","image/silouhetteGryffindor.png","image/silouhetteSlytherin.png","image/silouhetteRavenclaw.png","image/silouhetteHufflepuff.png","image/lightning-death.png","image/Impact.gif","image/background/backgroundCastleBasement.jpg","image/background/backgroundCastleDoor.jpg","image/background/backgroundCastleFire.jpg","image/background/backgroundCastleIndoor.jpg","image/background/backgroundCastleNight.jpg","image/background/backgroundCastleStairs.jpg","image/background/backgroundForestLightning.jpg","image/background/backgroundQuidditch.jpg","image/background/backgroundQuidditchFight.jpg","image/background/backgroundQuidditchStadium.jpg","image/background/backgroundTrain.jpg","sound/attackSound.wav","sound/defenseSound.mp3","sound/ScreamAndDie.wav","image/logochoice.png","image/trash.svg","sound/backgroundMusic.mp3","scripts/Fighter.js","scripts/Spell.js","scripts/HeaderShield.js","scripts/Timer.js","scripts/Header.js","scripts/Instructions.js","scripts/VictoryMessage.js","scripts/TournementVictory.js","scripts/wallFight.js","scripts/Shield.js","scripts/Fight.js","scripts/HouseSelection.js","scripts/Settings.jsx","scripts/HomePage.jsx","App.jsx","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Fighter","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","inTab1","event","localTabKeys","state","tabKeys","indexOf","key","push","setState","handleKeyPress","victory","displayInstr","startGame","fighter","moveUp","top","move","id","speed","moveDown","window","innerHeight","height","moveLeft","left","moveRight","innerWidth","width","attack","castSpell","facesRight","rotate","rotateFighter","defend","defense","shieldNumber","takeOutShield","outTab1","splice","Gryffindor","GryffindorColor","Slytherin","SlytherinColor","Ravenclaw","RavenclawColor","Hufflepuff","HufflepuffColorColor","Head2","HeadDeath2","spellCasted","rotation","document","addEventListener","fighterStyle","transform","concat","position","backgroundImage","deathFighter","Impact","house","fighterStyleTouched","fighterId","react_default","a","createElement","className","style","touched","Component","Spell","spellStyle","spell","Shield","Timer","componentDidMount","timerInterval","setInterval","modalVictory","seconds","minutes","timer","clearInterval","endOfFight","componentDidUpdate","prevProps","prevState","fightTime","timerStyle","padding","border","backgroundColor","color","textAlign","fontSize","borderRadius","React","Header","fighter1","fighter2","numberOfShields","shieldsItem","i","scripts_HeaderShield","Timer_Timer","zIndex","renderShields","Instructions","VictoryMessage","nextFight","turn","restartFight","modeTournoi","gameType","winningHouse","onClick","Link","to","TournementVictory","gryffindorTeam","slytherinTeam","ravenclawTeam","hufflepuffTeam","score","isEndTournament","houseSort","sort","b","first","length","second","third","style1","style2","style3","rankHouses","Wall","shouldComponentUpdate","nextProps","nextState","componentWillUpdate","getRandomBackground","bgImage","background1","background2","background3","background4","background5","background6","background7","background8","background9","background10","background11","background12","selectedImage","randomImage","Math","floor","random","shieldStyle","Fight","progressBar","progress","houseStyles","barColor","progressBar1","progress1","fighterID","spellID","x","defineProperty","objectSpread","direction","abs","spellIntervall","setTimeout","bind","assertThisInitialized","spellSound","play","volume","soundEffect","effectsVolume","y","shieldOn","shieldTime","shieldSound","Instr","getCurrentFighters","j","fightersHouse","life","opacity","spellfighter1","spellfighter2","scoreFighter1","scoreFighter2","welcomeFight","currentState1","currentState2","hasCollision","hitsShield","scoreFighters","deathSound","victoryHouse","conditionDecount","letsFight","messageStart","addScores","reIntitialize","leftPosition","newFacePosition","notDead","redirect","endTournament","Redirect","Audio","shield","GryffindorShield","SlytherinShield","RavenclawShield","HufflepuffShield","keyInstr","progressAttack1","leftavatar","topavatar","heightavatar","widthavatar","borderradius","progressAttack2","righttavatar1","topavatar1","heightavatar1","widthavatar1","borderradius1","allCharacteristics","fighterAndSpellCallback","object1","object2","_this$setState10","_React$createElement","avatarStyle","backgroundPosition","backgroundSize","backgroundRepeat","avatarId","avatarStyle1","right","backgrounPosition","avatarId1","gri","sly","rav","huf","scripts_wallFight","scripts_Header","src_scripts_Fighter","src_scripts_Spell","Shield_Shield","bottom","margin","lineHeight","src_scripts_Instructions","src_scripts_VictoryMessage","getCurrentFighter","HouseSelection","clearChoice","playerSelection","clearButton","isSelected","playerAmount","amount","addToPlayerSelection","housePicked","playerAdd","grayOut","select","hideUnselectedHouse","pageTitle","selectionChoice1","selectionChoice2","selectionChoice3","selectionChoice4","selection","src","trash","_this2","finalSelection","_this3","slytherinStyle","gryffindorStyle","ravenclawStyle","hufflepuffStyle","Hogwarts","alt","onChange","e","parseInt","target","value","playerConfirmation","Settings","toggle","inputToToggle","toggleWindow","showSettings","isMusicOn","isSoundOn","volumeOnStyle","display","volumeOffStyle","soundOnStyle","soundOffStyle","type","volumeOn","volumeOff","HomePage","displayPopups","popupButtons","gameTypeChoice","choice","setVolume","bool","Settings_Settings","App","getGameType","getFinalSelection","players","includes","musicVolume","soundVolume","backgroundMusic","soundsVolume","music","autoPlay","HashRouter","Switch","Route","exact","path","render","src_scripts_HomePage","scripts_HouseSelection","src_scripts_Fight","src_scripts_TournementVictory","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","src_App_0","getElementById","URL","process","origin","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.4f6c184d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gryffindor.00878cd3.png\";","module.exports = __webpack_public_path__ + \"static/media/slytherin.44b21481.png\";","module.exports = __webpack_public_path__ + \"static/media/ravenclaw.4ec5ddf9.png\";","module.exports = __webpack_public_path__ + \"static/media/hufflepuff.da05ed0b.png\";","module.exports = __webpack_public_path__ + \"static/media/backgroundCastle.f69c832b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/volumeOn.fc813e68.png\";","module.exports = __webpack_public_path__ + \"static/media/volumeOff.9415b281.png\";","module.exports = __webpack_public_path__ + \"static/media/silouhetteGryffindor.6be90420.png\";","module.exports = __webpack_public_path__ + \"static/media/silouhetteSlytherin.b11709f7.png\";","module.exports = __webpack_public_path__ + \"static/media/silouhetteRavenclaw.f3c32ae5.png\";","module.exports = __webpack_public_path__ + \"static/media/silouhetteHufflepuff.2b7f92ba.png\";","module.exports = __webpack_public_path__ + \"static/media/lightning-death.a997750f.png\";","module.exports = __webpack_public_path__ + \"static/media/Impact.f65d87d4.gif\";","module.exports = __webpack_public_path__ + \"static/media/backgroundCastleBasement.b66b654c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/backgroundCastleDoor.e3ef824c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/backgroundCastleFire.6e4afb53.jpg\";","module.exports = __webpack_public_path__ + \"static/media/backgroundCastleIndoor.6daf573c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/backgroundCastleNight.42c973d6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/backgroundCastleStairs.40cb1bbf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/backgroundForestLightning.15b47dbe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/backgroundQuidditch.3a81cdf3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/backgroundQuidditchFight.83be700c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/backgroundQuidditchStadium.b006e68c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/backgroundTrain.e785c39c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/attackSound.dc388a5a.wav\";","module.exports = __webpack_public_path__ + \"static/media/defenseSound.911cb887.mp3\";","module.exports = __webpack_public_path__ + \"static/media/ScreamAndDie.b42c4c44.wav\";","module.exports = __webpack_public_path__ + \"static/media/logochoice.ab9ea530.png\";","module.exports = __webpack_public_path__ + \"static/media/trash.fd8b42e2.svg\";","module.exports = __webpack_public_path__ + \"static/media/backgroundMusic.8e108864.mp3\";","import React, { Component } from 'react';\nimport './Fighter.css';\nimport GryffindorColor from \"../image/silouhetteGryffindor.png\";\nimport SlytherinColor from \"../image/silouhetteSlytherin.png\";\nimport RavenclawColor from \"../image/silouhetteRavenclaw.png\";\nimport HufflepuffColorColor from \"../image/silouhetteHufflepuff.png\";\n//import HeadDeath from \"../image/tetedemort.png\"; Image tête de mort si besoin\nimport HeadDeath2 from \"../image/lightning-death.png\";\nimport Impact from \"../image/Impact.gif\"\n\nclass Fighter extends Component {\n\n  constructor(props) {\n    super(props);\n    this.Gryffindor = GryffindorColor;\n    this.Slytherin = SlytherinColor;\n    this.Ravenclaw = RavenclawColor;\n    this.Hufflepuff = HufflepuffColorColor;\n    //this.Head = HeadDeath; image tête de mort si besoin\n    this.Head2 = HeadDeath2;\n\n    this.state = {\n      spellCasted: false,\n      rotation: this.props.fighter.rotation,\n      facesRight: this.props.fighter.facesRight,\n      top: this.props.fighter.top,\n      left: this.props.fighter.left,\n      width: this.props.fighter.width,\n      height: this.props.fighter.height,\n      speed: 50,\n      tabKeys: [],\n    }\n  }\n\n\n  componentDidMount() {\n\n    document.addEventListener(\"keydown\", this.inTab1, false)\n    document.addEventListener(\"keyup\", this.outTab1, false);\n\n  }\n\n\n\n  inTab1 = (event) => {\n    let localTabKeys = this.state.tabKeys;\n    if (localTabKeys.indexOf(event.key) < 0) {\n      localTabKeys.push(event.key)\n    }\n    this.setState({\n      tabKeys: localTabKeys,\n    })\n    this.handleKeyPress(localTabKeys)\n  }\n\n\n  handleKeyPress = (localTabKeys) => {\n    if (this.props.victory === false && this.props.displayInstr === false && this.props.startGame === false) {\n      if (localTabKeys.indexOf(this.props.fighter.moveUp) !== -1 && this.props.fighter.top > 110) {\n        this.props.fighter.move(this.props.fighter.id, -this.state.speed, 0)\n      }\n      if (localTabKeys.indexOf(this.props.fighter.moveDown) !== -1 && this.props.fighter.top < window.innerHeight - this.props.fighter.height - 20) {\n        this.props.fighter.move(this.props.fighter.id, this.state.speed, 0)\n      }\n      if (localTabKeys.indexOf(this.props.fighter.moveLeft) !== -1 && this.props.fighter.left > -20) {\n        this.props.fighter.move(this.props.fighter.id, 0, -this.state.speed)\n      }\n      if (localTabKeys.indexOf(this.props.fighter.moveRight) !== -1 && this.props.fighter.left < window.innerWidth - this.props.fighter.width - 20) {\n        this.props.fighter.move(this.props.fighter.id, 0, this.state.speed)\n      }\n      if (localTabKeys.indexOf(this.props.fighter.attack) !== -1) {\n        this.props.fighter.castSpell(this.props.fighter.id, this.props.fighter.facesRight)\n      }\n      if (localTabKeys.indexOf(this.props.fighter.rotate) !== -1) {\n        this.props.fighter.rotateFighter(this.props.fighter.id)\n      }\n      if (localTabKeys.indexOf(this.props.fighter.defend) !== -1 && this.props.fighter.defense.shieldNumber > 0) {\n        this.props.fighter.takeOutShield(this.props.fighter.id)\n      }\n    }\n  }\n\n\n\n  outTab1 = (event) => {\n    let localTabKeys = this.state.tabKeys;\n    if (localTabKeys.indexOf(event.key) >= 0) {\n      localTabKeys.splice(localTabKeys.indexOf(event.key), 1)\n    }\n    this.setState({\n      tabKeys: localTabKeys,\n    })\n  }\n\n\n\n  render() {\n\n    let fighterStyle = {\n      transform: `rotateY(${this.props.fighter.rotation}deg)`,\n      position: \"absolute\",\n      top: this.props.fighter.top + \"px\",\n      left: this.props.fighter.left + \"px\",\n      width: this.state.width + \"px\",\n      height: this.state.height + \"px\",\n      backgroundImage: this.props.fighter.deathFighter === true ? `url(${Impact})` : `url(${this[this.props.fighter.house]})`,\n    };// ternaire pour afficher la mort de fightherID\n\n    let fighterStyleTouched = {\n      transform: `rotateY(${this.props.fighter.rotation}deg)`,\n      position: \"absolute\",\n      top: this.props.fighter.top + \"px\",\n      left: this.props.fighter.left + \"px\",\n      width: this.state.width + \"px\",\n      height: this.state.height + \"px\",\n      backgroundImage: `url(${this.Head2})`,\n    };\n\n    let fighterId = \"fighter\" + this.props.fighter.house\n    return (\n\n      <div>\n        <div className=\"fighter\" style={(this.props.fighter.touched) ? fighterStyleTouched : fighterStyle} id={fighterId}>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Fighter;\n","import React, { Component } from 'react';\nimport './Spell.css';\n\nclass Spell extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    }\n  }\n  \n  render() {\n    let spellStyle={\n      position: \"absolute\",\n      top: this.props.spell.top+\"px\",\n      left: this.props.spell.left+\"px\",\n      width: this.props.spell.width+\"px\",\n      height: this.props.spell.height+\"px\",\n    }\n    \n    return (\n      <div className=\"spell\" id={this.props.spell.id} style={spellStyle}>\n      </div>\n    );\n  }\n}\n\nexport default Spell;\n","import React, { Component } from 'react'\nimport './HeaderShield.css'\n\nclass Shield extends Component {\n\n    constructor(props){\n        super(props)\n    }\n\n    render () {\n        return (\n            <div className=\"defenseShield\"></div>\n        )\n    }\n}\n\nexport default Shield","import React from 'react';\n\nexport default class Timer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            minutes: this.props.fightTime.minutes,\n            seconds: this.props.fightTime.seconds,\n            timer: \"0\" + this.props.fightTime.minutes + \":0\" + this.props.fightTime.seconds\n        };\n    }\n\n    componentDidMount = () => {\n\n        let timerInterval = setInterval(() => {\n            if (!this.props.displayInstr && !this.props.modalVictory && !this.props.startGame) {\n                if (this.state.seconds === 0) {\n                    this.setState({\n                        minutes: this.state.minutes - 1,\n                        seconds: 59\n                    })\n                }\n                else {\n                    this.setState({\n                        seconds: this.state.seconds - 1,\n                    })\n                }\n\n                this.setState({\n                    timer: this.state.seconds > 9 ? \"0\" + this.state.minutes + \":\" + this.state.seconds : \"0\" + this.state.minutes + \":0\" + this.state.seconds\n                })\n\n                if (this.state.minutes === 0 && this.state.seconds === 0) {\n                    clearInterval(timerInterval);\n                    this.props.endOfFight();\n                }\n            }\n        }, 1000);\n    }\n\n\n    componentDidUpdate = (prevProps, prevState) => {\n        if (prevProps.fightTime !== this.props.fightTime) {\n            this.setState({\n                minutes: this.props.fightTime.minutes,\n                seconds: this.props.fightTime.seconds,\n                timer: \"0\" + this.props.fightTime.minutes + \":0\" + this.props.fightTime.seconds\n            });\n        }\n    }\n\n    render() {\n        let timerStyle = {\n            position : \"absolute\",\n            top : \"10px\",\n            left : window.innerWidth/2*0.92+\"px\",\n            padding : \"10px\",\n            border : \"1px solid #717171\",\n            backgroundColor:\"#717171\",\n            color:\"rgb(252, 222, 53)\",\n            width: \"100px\",\n            textAlign : \"center\",\n            fontSize : \"20px\",\n            borderRadius: \"15px\",\n        }\n\n        return (\n            <div style={timerStyle}>\n                {this.state.timer}\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport Shield from './HeaderShield';\nimport Timer from './Timer'\n\nclass Header extends Component {\n\n  constructor(props){\n    super(props);\n    this.state={\n      fighter1: this.props.fighter1,\n      fighter2: this.props.fighter2,\n    }\n  }\n\n  renderShields(numberOfShields){\n    const shieldsItem = [];\n    for (var i=0; i < numberOfShields; i++) {\n      shieldsItem.push(<Shield />);\n    }\n    return shieldsItem;\n  }\n\n  endOfFight=()=>{\n    //this.props.fighter2.life > this.props.fighter1.life ? this.props.endOfFight(this.props.fighter1.id, this.props.fighter2.id) : this.props.endOfFight(this.props.fighter2.id, this.props.fighter1.id)\n    this.props.endOfFight()\n  }\n\n  render() {\n\n    let shieldsFighter1={\n      position : \"absolute\",\n      top : \"45px\",\n      left : \"34vw\",\n      zIndex : 3,\n    }\n\n    let shieldsFighter2={\n      position : \"absolute\",\n      top : \"45px\",\n      left : \"61vw\",\n      zIndex : 3,\n    }\n      \n    return (\n      <div>\n        <Timer\n          fightTime = {this.props.fightTime}\n          endOfFight={this.endOfFight}\n          modalVictory={this.props.modalVictory}\n          displayInstr={this.props.displayInstr}\n          startGame={this.props.startGame}\n        />\n        <div id=\"shieldsFighter1\" style={shieldsFighter1}>\n            {\n              this.renderShields(this.props.fighter1.defense.shieldNumber)\n            } \n        </div>\n        <div id=\"shieldsFighter2\" style={shieldsFighter2}>\n            {\n              this.renderShields(this.props.fighter2.defense.shieldNumber)\n            } \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\"\nimport './Instructions.css'\n\n\n\nclass Instructions extends Component {\n    render() {\n\n\n        return (\n                <div className=\"keyboardLayout\" >\n                    <div className=\"container\">\n                        <div className=\"image1\"></div>\n                        <div className=\"image2\"></div>\n                    </div>\n                    <div className=\"container2\">\n                        <table>\n                            <tr>\n                                <th></th>\n                                <td>E</td>\n                            </tr>\n                            <tr>\n                                <td>S</td>\n                                <td>D</td>\n                                <td>F</td>\n                            </tr>\n                        </table>\n                        <span>MOVE</span>\n                        <table>\n                            <tr>\n                                <th></th>\n                                <th>↑</th>\n                            </tr>\n                            <tr>\n                                <td>←</td>\n                                <td>↓</td>\n                                <td>→</td>\n                            </tr>\n                        </table>\n                    </div>\n                    <div className=\"container3\">\n                        <p>A</p>\n                        <span>ROTATE</span>\n                        <p>P</p>\n                    </div>\n                    <div className=\"container5\">\n                        <p>Q</p>\n                        <span>DEFEND</span>\n                        <p>M</p>\n                    </div>\n                    <div className=\"container4\">\n                        <p>W</p>\n                        <span>ATTACK</span>\n                        <p>!</p>\n                    </div>\n                </div>\n        )\n    }\n}\n\nexport default Instructions","import React from 'react';\nimport './VictoryMessage.css'\nimport { Link } from \"react-router-dom\";\n\n//import { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nclass VictoryMessage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modeTournoi: this.props.gameType === \"1v1\" ? false : true,\n      turn:this.props.turn,\n    };\n  }\n\n  nextFight=()=>{\n    this.setState({\n      turn:this.state.turn++\n    })\n    this.props.nextFight(this.state.turn);\n  }\n\n  restartFight=()=>{\n    this.props.restartFight();\n  }\n\n  render() {\n    \n\n    return (\n      <div className=\"VictoryText\">\n        <p>CONGRATS {this.props.winningHouse} !!</p>\n        <div className=\"ButtonChoice\">{\n          this.state.modeTournoi ?\n            <button onClick={this.nextFight}>Next Fight</button>\n            :\n            <button onClick={this.restartFight}>Start Again</button>\n        }\n            <Link to=\"/\"><button >Home Page</button></Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default VictoryMessage;\n","import React, { Component } from \"react\";\nimport \"./TournementVictory.css\";\nimport { Link } from \"react-router-dom\";\n\n\nimport gryffindorTeam from '../image/gryffindor.png'\nimport slytherinTeam from '../image/slytherin.png'\nimport ravenclawTeam from '../image/ravenclaw.png'\nimport hufflepuffTeam from '../image/hufflepuff.png'\n\n\nclass TournementVictory extends Component {\n    constructor(props) {\n        super(props);\n        this.Gryffindor = gryffindorTeam;\n        this.Slytherin = slytherinTeam;\n        this.Ravenclaw = ravenclawTeam;\n        this.Hufflepuff = hufflepuffTeam;\n\n        this.state = {\n            score: this.props.isEndTournament\n        }\n\n    }\n\n    rankHouses() {\n        let score = this.state.score\n        let houseSort = [];\n        for (let key in score) {\n            houseSort.push([key, score[key]]);\n        }\n        houseSort.sort(function (a, b) {\n            return (a[1] < b[1] ? -1 : (a[1] > b[1] ? 1 : 0))\n        });\n        let first = houseSort[houseSort.length - 1]\n        let second = houseSort[houseSort.length - 2]\n        let third = houseSort[houseSort.length - 3]\n        let style1 = { backgroundImage: `url(${this[first[0]]})` }\n        let style2 = { backgroundImage: `url(${this[second[0]]})` }\n        let style3 = { backgroundImage: `url(${this[third[0]]})` }\n        return <div>\n            <div className=\"fullScore\">\n                <div className=\"skore two\">{second[1]} pts</div>\n                <div className=\"skore one\">{first[1]} pts</div>\n                <div className=\"skore three\">{third[1]} pts</div>\n            </div>\n\n            <div className=\"award\" id=\"firstAward\" style={style1}></div>\n            <div className=\"award\" id=\"secondAward\" style={style2}></div>\n            <div className=\"award\" id=\"thirdAward\" style={style3}></div>\n        </div >\n\n    }\n\n\n\n\n    render() {\n\n\n\n        return (\n            <div>\n                <body className=\"bodyTournementVictory\">\n                    <p className=\"titleWinners\"> WINNERS </p>\n                    <div className=\"gobleoffireimage\"></div>\n                    <Link to=\"/\"><button className=\"boutonTournementHomePage\">Home Page</button></Link>\n                    <div className=\"boutonPodium\"></div>\n                    {this.rankHouses()}\n                </body>\n            </div>\n\n        );\n    }\n\n}\nexport default TournementVictory;","import React, { Component } from 'react';\nimport './wallFight.css';\nimport background1 from '../image/background/backgroundCastle.jpg';\nimport background2 from '../image/background/backgroundCastleBasement.jpg';\nimport background3 from '../image/background/backgroundCastleDoor.jpg';\nimport background4 from '../image/background/backgroundCastleFire.jpg';\nimport background5 from '../image/background/backgroundCastleIndoor.jpg';\nimport background6 from '../image/background/backgroundCastleNight.jpg';\nimport background7 from '../image/background/backgroundCastleStairs.jpg';\nimport background8 from '../image/background/backgroundForestLightning.jpg';\nimport background9 from '../image/background/backgroundQuidditch.jpg';\nimport background10 from '../image/background/backgroundQuidditchFight.jpg';\nimport background11 from '../image/background/backgroundQuidditchStadium.jpg';\nimport background12 from '../image/background/backgroundTrain.jpg';\n\n\nclass Wall extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            bgImage: [\n                background1,\n                background2,\n                background3,\n                background4,\n                background5,\n                background6,\n                background7,\n                background8,\n                background9,\n                background10,\n                background11,\n                background12,\n            ],\n            selectedImage: background1,\n        };\n    }\n\n    componentDidMount() {\n        this.getRandomBackground();\n    }\n\n    shouldComponentUpdate = (nextProps, nextState) => {\n        return(!(nextProps.turn === this.props.turn))\n    }\n\n    componentWillUpdate=()=>{\n        this.getRandomBackground();\n    }\n\n    getRandomBackground() {\n        const randomImage = this.state.bgImage[Math.floor(Math.random() * this.state.bgImage.length)];\n        this.setState({\n            selectedImage: randomImage,\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"pic\" style={{ backgroundImage: `url(${this.state.selectedImage})` }} />\n        );\n    }\n}\n\nexport default Wall;","import React from 'react';\nimport './Shield.css';\n\nexport default class Shield extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n\n        let shieldStyle={\n            top: this.props.fighter.top-20 + \"px\",\n            left: this.props.fighter.left + \"px\",\n            width: 1.2*this.props.fighter.width + \"px\",\n            height: 1.3*this.props.fighter.height + \"px\",\n        }\n\n        return (\n            <div style={shieldStyle} className=\"energyShield\"></div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport Fighter from './Fighter';\nimport Spell from './Spell';\nimport Header from './Header';\nimport Instructions from './Instructions'\nimport './Fight.css';\nimport VictoryMessage from \"./VictoryMessage\"\nimport TournementVictory from \"./TournementVictory\"\nimport Wall from \"./wallFight.js\"\n//import ReactDOM from 'react-dom';\nimport Shield from \"./Shield.js\"\nimport { Redirect } from 'react-router'\n// import { Link } from \"react-router-dom\"\n\n\n\nimport GryffindorShield from '../image/gryffindor.png'\nimport SlytherinShield from '../image/slytherin.png'\nimport RavenclawShield from '../image/ravenclaw.png'\nimport HufflepuffShield from '../image/hufflepuff.png'\n\nimport spellSound from '../sound/attackSound.wav'\nimport shieldSound from '../sound/defenseSound.mp3'\nimport deathSound from '../sound/ScreamAndDie.wav'\n\n\nclass Fight extends Component {\n\n    constructor() {\n        super();\n\n        this.welcomeFight = this.welcomeFight.bind(this)\n        this.spellSound = new Audio(spellSound);\n        this.shieldSound = new Audio(shieldSound);\n        this.deathSound = new Audio(deathSound);\n\n        // eslint-disable-next-line no-unused-expressions\n        this.houseStyles = {\n            Gryffindor: {\n                shield: GryffindorShield,\n                barColor: \"#BA2732\",\n            },\n            Slytherin: {\n                shield: SlytherinShield,\n                barColor: \"#2A612B\",\n            },\n            Ravenclaw: {\n                shield: RavenclawShield,\n                barColor: \"#3A519A\",\n            },\n            Hufflepuff: {\n                shield: HufflepuffShield,\n                barColor: \"#F9E569\",\n            },\n        },\n            this.state = {\n\n                startGame: false,\n                seconds: 3,\n                messageStart: false,\n\n                redirect: false,\n\n                fightTime: {\n                    minutes: 2,\n                    seconds: 0,\n                },\n\n                //Instructions Screen\n                displayInstr: false,\n                keyInstr: 66,\n                turn: 1,\n\n                //Avatar 1\n                progressAttack1: 100,\n                progress: 100,\n                leftavatar: 5,\n                topavatar: 5,\n                heightavatar: 130,\n                widthavatar: 130,\n                borderradius: 50,\n                scoreFighter1: 0,\n\n\n                //Avatar 2\n                progressAttack2: 100,\n                progress1: 100,\n                righttavatar1: 5,\n                topavatar1: 5,\n                heightavatar1: 130,\n                widthavatar1: 130,\n                borderradius1: 50,\n                scoreFighter2: 0,\n\n                //turn:this.props.turn,\n\n                fighter1: {\n                    id: \"fighter1\",\n                    spellCasted: false,\n                    deathFighter: false, //Affichage de la mort\n                    rotation: 0,\n                    facesRight: true,\n                    top: 250,\n                    left: 100,\n                    life: 100,\n                    width: 160,\n                    height: 120,\n                    attack: \"w\",      // Attaque: w\n                    defend: \"q\",    // Défense: q\n                    rotate: \"a\",     // Rotate: a\n                    moveUp: \"e\",         // Up: e\n                    moveDown: \"d\",      // Down: d\n                    moveLeft: \"s\",        // Left: s\n                    moveRight: \"f\",       // Right: f\n                    house: \"Slytherin\",\n                    //house: this.props.fightersHouse[0],\n                    //house:this.getCurrentFighters()[0],\n                    castSpell: this.castSpell,\n                    move: this.move,\n                    rotateFighter: this.rotate,\n                    takeOutShield: this.takeOutShield,\n                    defense: {\n                        shieldOn: false,\n                        shieldNumber: 3,\n                        shieldTime: 3000,\n                    },\n                    touched: false\n                },\n                fighter2: {\n                    id: \"fighter2\",\n                    spellCasted: false,\n                    deathFighter: false, // Affichage de la Mort\n                    rotation: 180,\n                    facesRight: false,\n                    top: 250,\n                    left: 1300,\n                    life: 100,\n                    width: 160,\n                    height: 120,\n                    attack: \"!\",                 // Attaque: ! \n                    defend: \"m\",               // Défense: m\n                    rotate: \"p\",                // Rotate: p\n                    moveUp: \"ArrowUp\",                 // Up: Flèche du haut\n                    moveDown: \"ArrowDown\",               // Down: Flèche du bas\n                    moveLeft: \"ArrowLeft\",               // Left: Flèche de gauche\n                    moveRight: \"ArrowRight\",              // Right: Flèche de droite\n                    house: \"Gryffindor\",\n                    allCharacteristics: this.fighterAndSpellCallback,\n                    castSpell: this.castSpell,\n                    move: this.move,\n                    rotateFighter: this.rotate,\n                    takeOutShield: this.takeOutShield,\n                    defense: {\n                        shieldOn: false,\n                        shieldNumber: 3,\n                        shieldTime: 3000,\n                    },\n                    touched: false\n                },\n                spellfighter1: {\n                    left: 0,\n                    top: 0,\n                    height: 15,\n                    width: 15,\n                    direction: 10,\n                    id: \"\",\n                },\n                spellfighter2: {\n                    left: 0,\n                    top: 0,\n                    height: 15,\n                    width: 15,\n                    direction: -1,\n                    id: \"\",\n                },\n                modalVictory: false,\n                \n                ///////////PLAYERS\n                scoreFighters: {\n                    Gryffindor: 0,\n                    Slytherin: 0,\n                    Ravenclaw: 0,\n                    Hufflepuff: 0,\n                },\n\n\n            }\n        this.handleKeyPress = this.handleKeyPress.bind(this)\n        this.victoryHouse = '';\n    }\n\n\n\n    progressBar = (progress) => {\n        return <div className=\"progressbar\">\n            <div className=\"progress\" style={{\n                width: progress + '%',\n                backgroundColor: this.houseStyles[this.state.fighter1.house].barColor\n            }}>\n            </div>\n        </div>\n    }\n\n    progressBar1 = (progress1) => {\n        return <div className=\"progressbar1\">\n            <div className=\"progress1\" style={{\n                //width: `${progress1}%`,\n                width: progress1 + '%',\n                backgroundColor: this.houseStyles[this.state.fighter2.house].barColor\n            }}>\n            </div>\n        </div>\n    }\n\n    castSpell = (fighterID, facesRight) => {\n        let spellID = \"spell\" + fighterID\n        let x = facesRight ? 190 : -30;\n        // Apparition du spell\n        this.setState({\n            [fighterID]: {\n                ...this.state[fighterID],\n                spellCasted: true,\n            }\n        })\n        this.setState({\n            [spellID]: {\n                ...this.state[spellID],\n                left: this.state[fighterID].left + x,\n                top: this.state[fighterID].top + 35,\n                direction: x / Math.abs(x)\n            }\n        })\n        // Spell movement\n        let spellIntervall = setInterval(() => {\n            if (!this.state.displayInstr) {\n                this.setState({\n                    [spellID]: {\n                        ...this.state[spellID],\n                        left: this.state[spellID].left + 10 * this.state[spellID].direction,\n                    }\n                })\n            }\n        }, 10)\n\n\n        // Destruction of spell\n        setTimeout(\n            function () {\n                clearInterval(spellIntervall);\n                this.setState({\n                    [fighterID]: {\n                        ...this.state[fighterID],\n                        spellCasted: false,\n                    },\n                });\n            }\n                .bind(this),\n            2000\n        );\n        this.spellSound.play();\n        this.spellSound.volume = this.props.soundEffect.effectsVolume;\n    }\n\n    move = (fighterID, x, y) => {\n        this.setState({\n            [fighterID]: {\n                ...this.state[fighterID],\n                top: this.state[fighterID].top + x,\n                left: this.state[fighterID].left + y,\n            }\n        })\n    }\n\n    rotate = (fighterID) => {\n        this.setState({\n            [fighterID]: {\n                ...this.state[fighterID],\n                rotation: this.state[fighterID].rotation - 180,\n                facesRight: !this.state[fighterID].facesRight,\n            }\n        })\n    }\n\n    // Wizard shield function\n    takeOutShield = (fighterID) => {\n        this.setState({\n            [fighterID]: {\n                ...this.state[fighterID],\n                defense: {\n                    ...this.state[fighterID].defense,\n                    shieldOn: true,\n                    shieldNumber: this.state[fighterID].defense.shieldNumber - 1,\n                },\n            }\n        })\n        setTimeout(\n            function () {\n                this.setState({\n                    [fighterID]: {\n                        ...this.state[fighterID],\n                        defense: {\n                            ...this.state[fighterID].defense,\n                            shieldOn: false,\n                        },\n                    }\n                })\n            }\n                .bind(this),\n            this.state[fighterID].defense.shieldTime\n        );\n        this.shieldSound.play();\n        this.shieldSound.volume = this.props.soundEffect.effectsVolume;\n    }\n\n    hasCollision(object1, object2) {\n        if (this.state.modalVictory === false)\n            if (object1.top < object2.top + object2.width &&\n                object1.top + object1.width > object2.top &&\n                object1.left < object2.left + object2.height &&\n                object1.height + object1.left > object2.left) {\n                return true\n            }\n            else {\n                return false\n            };\n    };\n\n\n    //Instructions Screen>>>>>>>>>>>>>>>>>>\n    handleKeyPress(event) {\n        if (event.key === \"Escape\") {\n            this.Instr()\n        }\n    }\n    Instr = () => {\n        this.setState({ displayInstr: !this.state.displayInstr })\n    }\n\n\n\n    // Fighters selection depending on turn and number of players\n    getCurrentFighters = (turn) => {\n        let i = 0;\n        let j = 1;\n\n        switch (this.props.fightersHouse.length) {\n            case 3:\n                switch (turn) {\n                    case 1: { i = 0; j = 1 }; break;\n                    case 2: { i = 1; j = 2 }; break;\n                    case 3: { i = 0; j = 2 }; break;\n                };\n\n                break;\n            case 4:\n                switch (turn) {\n                    case 1: { i = 0; j = 1 }; break;\n                    case 2: { i = 2; j = 3 }; break;\n                    case 3: { i = 0; j = 2 }; break;\n                    case 4: { i = 1; j = 3 }; break;\n                    case 5: { i = 0; j = 3 }; break;\n                    case 6: { i = 1; j = 2 }; break;\n                    //case 7: { this.setState({ redirect: !this.state.redirect}) }; break;\n                };\n\n                break;\n            //default: { i = 0; j = 1 }; break;\n        }\n\n        this.setState({\n            fighter1: {\n                ...this.state.fighter1,\n                life: 100,\n                left: 250,\n                top: 250,\n                house: this.props.fightersHouse[i],\n                deathFighter: false,\n                style: {\n                    opacity: 1,\n                },\n                defense: {\n                    shieldTime: 3000,\n                    shieldOn: false,\n                    shieldNumber: 3,\n                }\n            },\n            fighter2: {\n                ...this.state.fighter2,\n                life: 100,\n                left: 1400,\n                top: 250,\n                house: this.props.fightersHouse[j],\n                deathFighter: false,\n                style: {\n                    opacity: 1,\n                },\n                defense: {\n                    shieldTime: 3000,\n                    shieldOn: false,\n                    shieldNumber: 3,\n                }\n            },\n            spellfighter1: {\n                ...this.state.spellfighter1,\n                id: \"spell\" + this.props.fightersHouse[i],\n            },\n            spellfighter2: {\n                ...this.state.spellfighter2,\n                id: \"spell\" + this.props.fightersHouse[j],\n            },\n            progress: 100,\n            progress1: 100,\n            modalVictory: false,\n            startGame: true,\n            turn: turn,\n            //Initialisation des scoreFighter à 0\n            scoreFighter1: 0,\n            scoreFighter2: 0,\n            fightTime: {\n                minutes: 2,\n                seconds: 0,\n            },\n        })\n\n    }\n\n\n    componentDidMount = () => {\n\n        this.timer = setInterval(this.welcomeFight, 1000);\n\n        this.getCurrentFighters(1);\n        setInterval(() => {\n            let currentState1 = this.state.progress;\n            let currentState2 = this.state.progress1;\n\n            // Collision detection between a spell and a shield\n            if (this.state.fighter1.defense.shieldOn) {\n                if (this.hasCollision(this.state.spellfighter2, this.state.fighter1)) {\n                    this.hitsShield(\"spellfighter2\", \"fighter2\");\n                }\n            }\n            if (this.state.fighter2.defense.shieldOn) {\n                if (this.hasCollision(this.state.spellfighter1, this.state.fighter2)) {\n                    this.hitsShield(\"spellfighter1\", \"fighter1\");\n                }\n            }\n\n            if (this.hasCollision(this.state.spellfighter1, this.state.fighter2)) {\n                //window.alert(\"COLLISIOOOOOOOOOOOOOOOOOOOOOON\")\n                //this.loseLife(fighter2.id)\n                this.setState({\n                    fighter2: {\n                        ...this.state.fighter2,\n                        touched: true\n                    },\n                    progress1: currentState2 - 20,\n                    fighter1: {\n                        ...this.state.fighter1,\n                        spellCasted: false,\n                    },\n                    spellfighter1: {\n                        ...this.state.spellfighter1,\n                        top: 0,\n                        left: 0,\n                    }\n                })\n                setTimeout(\n                    function () {\n                        this.setState({\n                            fighter2: {\n                                ...this.state.fighter2,\n                                touched: false\n                            }\n                        })\n                    }.bind(this), 250\n                )\n\n                ////JE PENSE QUON  PEUT LE VIRER\n                //this.deathOfAPlayer(fighter2.id)\n                if (this.state.progress === 0) {\n                    this.setState({\n                        scoreFighter2: this.state.scoreFighter2 + currentState2,\n                        progress: -1,\n                        modalVictory: true,\n\n\n                    });\n\n\n                    switch (this.state.fighter2.house) {\n                        case \"Gryffindor\": this.state.scoreFighters.Gryffindor += this.state.scoreFighter2; break;\n                        case \"Slytherin\": this.state.scoreFighters.Slytherin += this.state.scoreFighter2; break;\n                        case \"Ravenclaw\": this.state.scoreFighters.Ravenclaw += this.state.scoreFighter2; break;\n                        case \"Hufflepuff\": this.state.scoreFighters.Hufflepuff += this.state.scoreFighter2; break;\n                    }\n                }\n\n\n                if (this.state.progress1 === 0) {\n                    this.setState({\n                        scoreFighter1: this.state.scoreFighter1 + currentState1,\n                        progress1: - 1,\n                        modalVictory: true,\n                        // Affichage de la mort\n                        fighter2: {\n                            ...this.state.fighter2,\n                            deathFighter: true\n                        }\n                        \n                    });\n                    this.deathSound.play();\n                    this.deathSound.volume = this.props.soundEffect.effectsVolume;\n                    \n\n                    this.victoryHouse = this.state.fighter1.house;\n\n\n                    switch (this.state.fighter1.house) {\n                        case \"Gryffindor\": this.state.scoreFighters.Gryffindor += this.state.scoreFighter1; break;\n                        case \"Slytherin\": this.state.scoreFighters.Slytherin += this.state.scoreFighter1; break;\n                        case \"Ravenclaw\": this.state.scoreFighters.Ravenclaw += this.state.scoreFighter1; break;\n                        case \"Hufflepuff\": this.state.scoreFighters.Hufflepuff += this.state.scoreFighter1; break;\n                    }\n\n                }\n            }\n            if (this.hasCollision(this.state.spellfighter2, this.state.fighter1)) {\n                //this.loseLife(fighter1.id)\n                //window.alert(\"COLLISIOOOOOOOOOOOOOOOOOOOOOON\")\n                this.setState({\n                    fighter1: {\n                        ...this.state.fighter1,\n                        touched: true\n                    },\n                    progress: currentState1 - 20,\n                    fighter2: {\n                        ...this.state.fighter2,\n                        spellCasted: false,\n                    },\n                    spellfighter2: {\n                        ...this.state.spellfighter2,\n                        top: 0,\n                        left: 0,\n                    }\n                })\n                setTimeout(\n                    function () {\n                        this.setState({\n                            fighter1: {\n                                ...this.state.fighter1,\n                                touched: false\n                            }\n                        })\n                    }.bind(this), 250\n                )\n\n                //this.deathOfAPlayer(fighter1.id)\n                if (this.state.progress === 0) {\n                    this.setState({\n                        scoreFighter2: this.state.scoreFighter2 + currentState2,\n                        progress: - 1,\n                        modalVictory: true,\n                        //Affichage de la mort\n                        fighter1: {\n                            ...this.state.fighter1,\n                            deathFighter: true\n                        }\n\n                    });\n                    this.deathSound.play();\n                    this.deathSound.volume = this.props.soundEffect.effectsVolume\n\n                    this.victoryHouse = this.state.fighter2.house;\n                    switch (this.state.fighter2.house) {\n\n                        case \"Gryffindor\": this.state.scoreFighters.Gryffindor += this.state.scoreFighter2; break;\n                        case \"Slytherin\": this.state.scoreFighters.Slytherin += this.state.scoreFighter2; break;\n                        case \"Ravenclaw\": this.state.scoreFighters.Ravenclaw += this.state.scoreFighter2; break;\n                        case \"Hufflepuff\": this.state.scoreFighters.Hufflepuff += this.state.scoreFighter2; break\n                    }\n                }\n                if (this.state.progress1 === 0) {\n                    this.setState({\n                        scoreFighter1: this.state.scoreFighter1 + currentState1,\n                        progress1: - 1,\n                        modalVictory: true,\n                        deathFighter: true, // Affichage de la mort\n                    });\n                    this.deathSound.play();\n                    this.deathSound.volume = this.props.soundEffect.effectsVolume\n\n                    switch (this.state.fighter1.house) {\n                        case \"Gryffindor\": this.state.scoreFighters.Gryffindor += this.state.scoreFighter1; break;\n                        case \"Slytherin\": this.state.scoreFighters.Slytherin += this.state.scoreFighter1; break;\n                        case \"Ravenclaw\": this.state.scoreFighters.Ravenclaw += this.state.scoreFighter1; break;\n                        case \"Hufflepuff\": this.state.scoreFighters.Hufflepuff += this.state.scoreFighter1; break;\n                    }\n                }\n            }\n        }, 10)\n        document.addEventListener(\"keydown\", this.handleKeyPress)\n\n\n    }\n\n    welcomeFight = () => {\n\n        this.conditionDecount()\n        this.letsFight()\n    }\n\n    conditionDecount = () => {\n\n        if (this.state.seconds <= 1) {\n            clearInterval(this.timer);\n            this.setState({\n                messageStart: true,\n                seconds: null,\n                fightTime: {\n                    minutes: 2,\n                    seconds: 0,\n                },\n            });\n        }\n\n        if (this.state.seconds > 1) {\n            this.setState({\n                seconds: this.state.seconds - 1\n            })\n        }\n\n\n    }\n\n    letsFight = () => {\n        setTimeout(\n            function () {\n            //    clearInterval(this.timer);\n                this.setState({\n                    startGame: false,\n                    seconds: 4,\n                    messageStart: false,\n                })\n            }\n                .bind(this),\n            3500);\n    }\n\n    //loseLife(fighterID){}\n\n    addScores = () => {\n        switch (this.state.fighter1.house) {\n            case \"Gryffindor\": this.state.scoreFighters.Gryffindor += this.state.scoreFighter1; break;\n            case \"Slytherin\": this.state.scoreFighters.Slytherin += this.state.scoreFighter1; break;\n            case \"Ravenclaw\": this.state.scoreFighters.Ravenclaw += this.state.scoreFighter1; break;\n            case \"Hufflepuff\": this.state.scoreFighters.Hufflepuff += this.state.scoreFighter1; break;\n        }\n        switch (this.state.fighter2.house) {\n            case \"Gryffindor\": this.state.scoreFighters.Gryffindor += this.state.scoreFighter2; break;\n            case \"Slytherin\": this.state.scoreFighters.Slytherin += this.state.scoreFighter2; break;\n            case \"Ravenclaw\": this.state.scoreFighters.Ravenclaw += this.state.scoreFighter2; break;\n            case \"Hufflepuff\": this.state.scoreFighters.Hufflepuff += this.state.scoreFighter2; break;\n        }\n    }\n\n    endOfFight = () => {\n        this.setState({\n            scoreFighter1: this.state.scoreFighter1 + this.state.progress,\n            scoreFighter2: this.state.scoreFighter2 + this.state.progress1,\n            progress1: - 1,\n            modalVictory: true,\n        });\n        this.addScores()\n    }\n\n    // Consequence of a shield being hitten\n    hitsShield(spellID, fighterID) {\n        this.setState({\n            [spellID]: {\n                ...this.state[spellID],\n                left: 0,\n                top: 0,\n            },\n            [fighterID]: {\n                ...this.state[fighterID],\n                spellCasted: false,\n            }\n\n        })\n    }\n\n    restartFight = () => {\n\n        this.reIntitialize(this.state.fighter1.id, 100, true, false);\n        this.reIntitialize(this.state.fighter2.id, 1100, false, false);\n        this.setState({\n            progress: 100,\n            progress1: 100,\n            modalVictory: false,\n            /* fightTime: {\n                minutes: 2,\n                seconds: 0,\n            }, */\n        })\n\n    }\n\n    reIntitialize = (fighterID, leftPosition, newFacePosition, notDead) => {\n        this.setState({\n            [fighterID]: {\n                ...this.state[fighterID],\n                life: 100,\n                spellCasted: false,\n                deathFighter: notDead,// Affichage de la mort\n                top: 250,\n                left: leftPosition,\n                facesRight: newFacePosition,\n                defense: {\n                    shieldOn: false,\n                    shieldNumber: 3,\n                    shieldTime: 3000,\n                }\n            },\n        })\n    }\n\n    nextFight = (turn, seconds) => {\n        this.setState({\n            seconds: 4,\n        })\n        this.timer = setInterval(this.welcomeFight, 1000);\n        this.getCurrentFighters(turn);\n\n        this.welcomeFight(seconds)\n        //mettre le setstate en bas\n    }\n\n    redirect = () => {\n        if (this.state.modalVictory === true && this.state.turn === 3 && this.props.fightersHouse.length === 3) {\n            this.props.endTournament(this.state.scoreFighters)\n            this.addScores()\n            return <Redirect to='/TournementVictory' />\n        }\n        if (this.state.modalVictory === true && this.state.turn === 6 && this.props.fightersHouse.length === 4) {\n            this.props.endTournament(this.state.scoreFighters)\n            this.addScores()\n            return <Redirect to='/TournementVictory' />\n        }\n    }\n\n\n    //redirect = () => this.state.redirect ? <Redirect to='/TournementVictory' /> : \"\"\n    render() {\n        const { redirect } = this.state;\n        if (redirect) {\n            return <Redirect to='/TournementVictory' />;\n        }\n\n        let avatarStyle = {\n            position: \"absolute\",\n            top: this.state.topavatar + \"px\",\n            left: this.state.leftavatar + \"px\",\n            width: this.state.widthavatar + \"px\",\n            height: this.state.heightavatar + \"px\",\n            backgroundImage: `url(${this.houseStyles[this.state.fighter1.house].shield})`,\n            backgroundPosition: \"right\",\n            backgroundSize: \"contain\",\n            backgroundRepeat: \"no-repeat\",\n        }\n\n        let avatarId = \"avatar\" + this.props.house\n\n        let avatarStyle1 = {\n            position: \"absolute\",\n            top: this.state.topavatar1 + \"px\",\n            right: this.state.righttavatar1 + \"px\",\n            width: this.state.widthavatar1 + \"px\",\n            height: this.state.heightavatar1 + \"px\",\n            backgroundImage: `url(${this.houseStyles[this.state.fighter2.house].shield})`,\n            backgrounPosition: \"left\",\n            backgroundSize: \"contain\",\n            backgroundRepeat: \"no-repeat\",\n        }\n        let avatarId1 = \"avatar\" + this.props.house\n\n        let instrStyle = {\n            position: \"absolute\",\n            bottom: \"20px\",\n            color: \"white\",\n            right: \"20px\",\n            width: 150 + \"px\",\n            margin: \"auto\",\n            border: 3 + \"px\" + \" \" + \"solid\" + \" \" + \"white\",\n            lineHeight: 2 + \"px\",\n            opacity: 0.8,\n            fontSize: \"25px\",\n        }\n\n        let gri = 'Gryffindor: ' + this.state.scoreFighters.Gryffindor\n        let sly = 'Slytherin: ' + this.state.scoreFighters.Slytherin\n        let rav = 'Ravenclaw: ' + this.state.scoreFighters.Ravenclaw\n        let huf = 'Hufflepuff: ' + this.state.scoreFighters.Hufflepuff\n\n\n\n        let grifStyle = {\n            backgroundColor: \"#BA2732\"\n        }\n\n        let sylStyle = {\n            backgroundColor: \"#2A612B\"\n        }\n\n        let ravStyle = {\n            backgroundColor: \"#3A519A\"\n        }\n\n        let hufStyle = {\n            backgroundColor: \"#F9E569\"\n        }\n\n        return (\n\n            <div>\n                <div>\n                    <Wall \n                        turn={this.state.turn}\n                    />\n                </div>\n                <div id=\"bodyFight\">\n                    <div className=\"full\">\n                        {this.redirect()}\n                        <Header\n                            fighter1={this.state.fighter1}\n                            fighter2={this.state.fighter2}\n                            startGame={this.state.startGame}\n                            fightTime={this.state.fightTime}\n                            endOfFight={this.endOfFight}\n                            modalVictory={this.state.modalVictory}\n                            displayInstr={this.state.displayInstr}\n                        />\n                        <div className=\"avatar\" id={avatarId} style={avatarStyle}></div>\n                        {this.progressBar(this.state.progress)}\n\n                        <div className=\"avatar1\" id={avatarId1} style={avatarStyle1}></div>\n                        {this.progressBar1(this.state.progress1)}\n                    </div>\n                    <div style={{zIndex:-1,}}>\n                        <Fighter                // Player#1\n                            fighter={this.state.fighter1}\n                            victory={this.state.modalVictory}\n                            displayInstr={this.state.displayInstr}\n                            startGame={this.state.startGame}\n                        />\n                    </div>\n                    <div style={{zIndex:-1,}}>\n                        <Fighter                // Player#2\n                            fighter={this.state.fighter2}\n                            victory={this.state.modalVictory}\n                            displayInstr={this.state.displayInstr}\n                            startGame={this.state.startGame}\n                        />\n                    </div>\n                    <div>{\n                        this.state.fighter1.spellCasted ?\n                            <Spell\n                                spell={this.state.spellfighter1}\n                            />\n                            :\n                            <div></div>\n                    }</div>\n                    <div>{\n                        this.state.fighter2.spellCasted ?\n                            <Spell\n                                spell={this.state.spellfighter2}\n                            />\n                            :\n                            <div></div>\n                    }</div>\n                    <div>{\n                        this.state.fighter1.defense.shieldOn ?\n                            <Shield\n                                fighter={this.state.fighter1}\n                            />\n                            :\n                            <div></div>\n                    }</div>\n                    <div>{\n                        this.state.fighter2.defense.shieldOn ?\n                            <Shield\n                                fighter={this.state.fighter2}\n                            />\n                            :\n                            <div></div>\n                    }</div>\n\n                    <div>{\n                        this.state.startGame ?\n                            <div className=\"beginFight\">\n                                {!this.state.messageStart ? <h1 className=\"titleBegin\">{this.state.fighter1.house} vs {this.state.fighter2.house}</h1>:<div></div>}\n                                <h1 className=\"decount\">{this.state.seconds}</h1>{\n                                    this.state.messageStart ?\n                                        <h1 className=\"decount\">Fight !</h1>\n                                        :\n                                        <h1></h1>\n                                }\n                            </div>\n                            :\n                            <div></div>\n                    }</div>\n\n                    <div>\n                        <div className=\"spaceInstr\" style={instrStyle}>\n                            <p>Press ESCAPE</p>\n                            <p>for Instructions</p>                            \n                        </div>\n                        {\n                            this.state.displayInstr && !this.state.modalVictory ?\n                                <Instructions />\n                                :\n                                <div></div>\n                        }\n                    </div>\n\n                    <div className=\"score\">\n                        {/* <h2 className=\"scorePerso\" style={grifStyle}>{ordered}</h2> */}\n                        <p className=\"scorePerso\" style={grifStyle}>{gri}</p>\n                        <p className=\"scorePerso\" style={sylStyle}>{sly}</p>\n                        <p className=\"scorePerso\" style={hufStyle}>{huf}</p>\n                        <p className=\"scorePerso\" style={ravStyle}>{rav}</p>\n                    </div>\n\n                    <div style={{zIndex:10,}}>{\n                        this.state.modalVictory ?\n                            <VictoryMessage\n                                getCurrentFighters={this.getCurrentFighters}\n                                turn={this.state.turn}\n                                getCurrentFighter={this.getCurrentFighters}\n                                turn={this.state.turn}\n                                nextFight={this.nextFight}\n                                restartFight={this.restartFight}\n                                gameType={this.props.gameType}\n                                winningHouse={this.victoryHouse}\n                            />\n                            :\n                            <div></div>\n                    }</div>\n\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default Fight;","import React, { Component } from \"react\";\nimport Hogwarts from \"../image/logochoice.png\";\nimport \"./Houses.css\"\nimport { Link } from \"react-router-dom\"\nimport trash from \"../image/trash.svg\"\n\n\nclass HouseSelection extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      playerSelection: [],   //tableau envoyé à \"App\" via this.props.finalSelection()\n      playerAmount: this.props.gameType === \"1v1\" ? 2 : 3,  // quantité de joueurs (valeur initiale à 3 en tournoi, et par défaut à 2 en 1v1)\n      selection: \"\", //  maison qui apparaît sur le bouton de confirmation\n      clearButton: false,   // permet de faire disparaitre le bouton après avoir confirmé son choix de maison\n      Gryffindor: {\n        isSelected: false,   // empêche 2+ joueurs de sélectionner la même maison\n        top: 250,  //px\n        left: 10,   //%\n        height: 200,  //px\n        width: 12,  //%\n        opacity: 1,   //opacité diminuée quand maison est choisie -> grayOut()\n      },\n      Slytherin: {\n        isSelected: false,\n        top: 250,\n        left: 79,\n        height: 200,\n        width: 12,\n        opacity: 1,   //opacité diminuée quand maison est choisie -> grayOut()\n      },\n      Hufflepuff: {\n        isSelected: false,\n        top: 500,\n        left: 10,\n        height: 200,\n        width: 12,\n        opacity: 1,   //opacité diminuée quand maison est choisie -> grayOut()\n      },\n      Ravenclaw: {\n        isSelected: false,\n        top: 500,\n        left: 79,\n        height: 200,\n        width: 12,\n        opacity: 1,    //opacité diminuée quand maison est choisie -> grayOut()\n      },\n    }\n  }\n\n  clearChoice = () => {\n    this.setState({\n      playerSelection: [],\n      clearButton: false,\n      Gryffindor: { opacity: 1, isSelected: false },\n      Slytherin: { opacity: 1, isSelected: false },\n      Ravenclaw: { opacity: 1, isSelected: false },\n      Hufflepuff: { opacity: 1, isSelected: false },\n    });\n  }\n\n  playerAmount = (amount) => {\n    this.clearChoice();\n    this.setState({\n      playerAmount: amount,\n    });\n  }\n  \n  // ajout maison par joueur\n  addToPlayerSelection = (housePicked) => {\n    this.setState({ clearButton: true });\n    if (this.state.playerAmount !== this.state.playerSelection.length && this.state[housePicked].isSelected === false ) {\n      const playerAdd = this.state.playerSelection\n      playerAdd.push(housePicked)\n      this.setState({ playerSelection: playerAdd })\n      this.grayOut(housePicked)\n    }\n  }\n  \n  // bouton reset choix maison\n  clearButton() {\n    if (this.state.playerSelection.length >= 0 && this.state.clearButton === true)\n      return <button\n        onClick={this.clearChoice} className=\"clear-button\"><img src={trash} /></button>;\n  }\n\n  // fonction pour empêcher de sélectionner maison deux fois:\n  grayOut = (select) => {\n    this.setState({\n      [select]: {\n        isSelected: true,\n        opacity: 0.4,\n      }\n    })\n  }\n\n  hideUnselectedHouse = () => {\n    if (this.state.playerAmount === this.state.playerSelection.length) {\n      switch (this.state.Gryffindor.isSelected) {case false: this.setState({Gryffindor: {opacity: 0}})};\n      switch (this.state.Slytherin.isSelected) {case false: this.setState({Slytherin: {opacity: 0}})};\n      switch (this.state.Ravenclaw.isSelected) {case false: this.setState({Ravenclaw: {opacity: 0}})};\n      switch (this.state.Hufflepuff.isSelected) {case false: this.setState({Hufflepuff: {opacity: 0}})};\n    }\n  }\n\n  // fonction du onclick pour confirmer le choix final et passer à la page de combat. Link pour envoyer sur ./fight.js\n  playerConfirmation() {\n    if (this.state.playerAmount !== 0 && this.state.playerSelection.length === this.state.playerAmount) //1ère condition du \"if\" nécessaire pour que bouton apparaisse pas au début\n      return <Link to=\"/fight\"><button\n        onClick={() => this.props.finalSelection(this.state.playerSelection)}\n        className=\"start-button\">START COMBAT</button></Link>\n  }\n\n  // titre de la page -> change en fonction du joueur qui doit choisir sa maison:\n  pageTitle = () => {\n    if (this.state.playerSelection.length < this.state.playerAmount) { return <h1 className=\"choose-house\"> Player {this.state.playerSelection.length + 1}: Choose your  House</h1> }\n    else { return <h1 className=\"choose-house\">Houses have been chosen!</h1> }\n  }\n\n  //les quatre fonctions suivantes affichent les choix de maison pour chaque joueur (faudrait en faire une seule fonction)\n\n  selectionChoice1 = () => {\n    if (typeof this.state.playerSelection[0] !== \"undefined\") return <h2 className=\"player-selection\">Player 1: {this.state.playerSelection[0]}</h2>\n  }\n  selectionChoice2 = () => {\n    if (typeof this.state.playerSelection[1] !== \"undefined\") return <h2 className=\"player-selection\">Player 2: {this.state.playerSelection[1]}</h2>\n  }\n  selectionChoice3 = () => {\n    if (typeof this.state.playerSelection[2] !== \"undefined\") return <h2 className=\"player-selection\">Player 3: {this.state.playerSelection[2]}</h2>\n  }\n  selectionChoice4 = () => {\n    if (typeof this.state.playerSelection[3] !== \"undefined\") return <h2 className=\"player-selection\">Player 4: {this.state.playerSelection[3]}</h2>\n  }\n\n  render() {\n    // 4 fonctions suivantes = styles des blasons pour anim. Pour l'instant anim sur opacity quand maison choisie\n    let slytherinStyle = {\n      backgroundSize: \"contain\",\n      position: \"absolute\",\n      top: this.state.Slytherin.top + \"px\",\n      left: this.state.Slytherin.left + \"%\",\n      height: this.state.Slytherin.height + \"px\",\n      width: this.state.Slytherin.width + \"%\",\n      opacity: this.state.Slytherin.opacity\n    };\n\n    let gryffindorStyle = {\n      backgroundSize: \"contain\",\n      position: \"absolute\",\n      top: this.state.Gryffindor.top + \"px\",\n      left: this.state.Gryffindor.left + \"%\",\n      height: this.state.Gryffindor.height + \"px\",\n      width: this.state.Gryffindor.width + \"%\",\n      opacity: this.state.Gryffindor.opacity\n    };\n\n    let ravenclawStyle = {\n      backgroundSize: \"contain\",\n      position: \"absolute\",\n      top: this.state.Ravenclaw.top + \"px\",\n      left: this.state.Ravenclaw.left + \"%\",\n      height: this.state.Ravenclaw.height + \"px\",\n      width: this.state.Ravenclaw.width + \"%\",\n      opacity: this.state.Ravenclaw.opacity\n    };\n\n    let hufflepuffStyle = {\n      backgroundSize: \"contain\",\n      position: \"absolute\",\n      top: this.state.Hufflepuff.top + \"px\",\n      left: this.state.Hufflepuff.left + \"%\",\n      height: this.state.Hufflepuff.height + \"px\",\n      width: this.state.Hufflepuff.width + \"%\",\n      opacity: this.state.Hufflepuff.opacity\n    };\n\n\n    return (\n\n      <body className=\"body\">\n        <div>{this.props.gameType === \"tournament\" ? <h1>Tournament Mode</h1> : <h1>1 vs 1</h1>}\n          {/* blason poudlard */}\n          <img src={Hogwarts} className=\"main-shield\" alt=\"HOGWARTS\" />\n          {/* titre page */}\n          {this.pageTitle()}\n          {/* choix du nombre de joueurs */}\n          {this.props.gameType === \"tournament\" ?\n            <select className=\"player-amount\" onChange={(e) => { this.playerAmount(parseInt(e.target.value, 10)) }} >\n              {/*} <option value=\"2\">2 players</option> */}\n              <option value=\"3\">3 players</option>\n              <option value=\"4\">4 players</option>\n            </select>\n            :\n            <div></div>\n          }\n        </div>\n        <div id=\"playerChoice\">\n          {/* affichage du choix des joueurs */}\n          {this.selectionChoice1()}\n          {this.selectionChoice2()}\n          {this.selectionChoice3()}\n          {this.selectionChoice4()}\n        </div>\n        <div>\n          {() => this.grayOut()}\n          {/* blasons des maisons */}\n          <div className=\"Slytherin shield-button\" onClick={() => this.addToPlayerSelection(\"Slytherin\")} style={slytherinStyle}>\n          </div>\n          <div className=\"Gryffindor shield-button\" onClick={() => this.addToPlayerSelection(\"Gryffindor\")} style={gryffindorStyle}>\n          </div>\n          <div className=\"Ravenclaw shield-button\" onClick={() => this.addToPlayerSelection(\"Ravenclaw\")} style={ravenclawStyle}>\n          </div>\n          <div className=\"Hufflepuff shield-button\" onClick={() => this.addToPlayerSelection(\"Hufflepuff\")} style={hufflepuffStyle}>\n          </div>\n        </div>\n        {/* boutons de confirmation */}\n        {this.clearButton()}\n        {this.playerConfirmation()}\n        {this.hideUnselectedHouse()}\n      </body>\n\n    );\n  }\n}\n\nexport default HouseSelection;","import React from 'react';\nimport volumeOn from '../image/volumeOn.png';\nimport volumeOff from '../image/volumeOff.png';\n\nimport './Settings.css';\n\nexport default class Settings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isMusicOn: true,\n      isSoundOn: true,\n    };\n  }\n\n  toggle = (inputToToggle) => {\n    this.props[inputToToggle](inputToToggle, !this.state[inputToToggle]);\n    this.setState({\n      [inputToToggle]: !this.state[inputToToggle]\n    });\n  }\n\n  toggleWindow = () => {\n    this.props.showSettings();\n  }\n\n  render() {\n    const volumeOnStyle = {\n      width: '30px',\n      height: '30px',\n      display: this.state.isMusicOn ? 'block' : 'none',\n    };\n\n    const volumeOffStyle = {\n      width: '30px',\n      height: '30px',\n      display: !this.state.isMusicOn ? 'block' : 'none',\n    };\n\n    const soundOnStyle = {\n      width: '30px',\n      height: '30px',\n      display: this.state.isSoundOn ? 'block' : 'none',\n    };\n\n    const soundOffStyle = {\n      width: '30px',\n      height: '30px',\n      display: !this.state.isSoundOn ? 'block' : 'none',\n    }\n\n    return (\n      <div id=\"settings\">\n        <div className=\"settingSound\">\n          <p>Music :</p>\n          <p>\n            <button type=\"button\" onClick={() => { this.toggle('isMusicOn'); }} style={volumeOnStyle}><img src={volumeOn} alt=\"volume on\" /></button>\n            <button type=\"button\" onClick={() => { this.toggle('isMusicOn'); }} style={volumeOffStyle}><img src={volumeOff} alt=\"volume off\" /></button>\n          </p>\n        </div>\n        <div className=\"settingSound\">\n          <p>Sound :</p>\n          <p>\n            <button type=\"button\" onClick={() => { this.toggle('isSoundOn'); }} style={soundOnStyle}><img src={volumeOn} alt=\"sound on\" /></button>\n            <button type=\"button\" onClick={() => { this.toggle('isSoundOn'); }} style={soundOffStyle}><img src={volumeOff} alt=\"sound off\" /></button>\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './HomePage.css';\nimport Settings from './Settings';\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      popupButtons: false,\n      showSettings: false,\n    };\n    this.displayPopups = this.displayPopups.bind(this)\n  }\n\n    displayPopups = () => {\n      this.setState({\n        popupButtons: !this.state.popupButtons,\n      });\n    }\n\n    gameTypeChoice = (choice) => {\n      this.props.gameType(choice);\n    }\n\n    showSettings = () => {\n      this.setState({\n        showSettings: !this.state.showSettings,\n      });\n    }\n\n    setVolume = (target, bool) => {\n      this.props.setVolume(target, bool);\n    }\n\n    render() {\n      return (\n        <div className=\"container1\">\n          <p className=\"title1\">Potter Fight</p>\n          <button type=\"button\" onClick={() => this.displayPopups()} className=\"newGame\">NEW GAME</button>\n          {\n            this.state.popupButtons \n              ? (\n                <div className=\"hidden\">\n                  <Link to=\"/HouseSelection\"><button style={{color: 'rgb(252, 222, 53)'}} type=\"button\" onClick={() => this.gameTypeChoice('1v1')}>1 VS 1</button></Link>\n                  <Link to=\"/HouseSelection\"><button style={{color: 'rgb(252, 222, 53)'}} type=\"button\" onClick={() => this.gameTypeChoice('tournament')}>TOURNAMENT</button></Link>\n                </div>\n              )\n              : (\n                <div />\n              )\n            }\n          <button className=\"settings\" type=\"button\" onClick={() => this.showSettings()}>SETTINGS</button>\n          {this.state.showSettings ?\n          (\n            <Settings\n              isMusicOn={this.setVolume}\n              isSoundOn={this.setVolume}\n              showSettings={this.showSettings}\n            />\n          ):\n          (<div />)}\n        </div>\n      );\n    }\n}\n\nexport default HomePage;\n","import React, { Component } from 'react';\nimport { Route, Switch, HashRouter } from 'react-router-dom';\nimport './App.css';\nimport Fight from './scripts/Fight';\nimport HouseSelection from './scripts/HouseSelection';\nimport TournementVictory from './scripts/TournementVictory';\nimport HomePage from './scripts/HomePage';\nimport music from './sound/backgroundMusic.mp3';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      gameType: 'tournament',\n      fightersHouse: ['Gryffindor', 'Slytherin', 'Hufflepuff'],\n      isEndTournament: {\n        Gryffindor: 600,\n        Slytherin: 200,\n        Ravenclaw: 300,\n        Hufflepuff: 400,\n      },\n      soundVolume: 1,\n      musicVolume: 1,\n    };\n\n    this.backgroundMusic = new Audio(music);\n    this.backgroundMusic.play();\n    this.backgroundMusic.volume = this.state.musicVolume;\n  }\n\n  getGameType = (choice) => {\n    this.setState({ gameType: choice })\n  }\n\n  getFinalSelection = (players) => {\n    this.setState({ fightersHouse: players })\n  }\n\n  endTournament = (scoreFighters) => {\n    this.setState({ isEndTournament: scoreFighters })\n  }\n\n  setVolume = (target, bool) => {\n    if (target.includes('Music')) {\n      if (!bool) this.setState({ musicVolume: 0 });\n      else this.setState({ musicVolume: 1 });\n    }\n    else if (target.includes('Sound')) {\n      if (!bool) this.setState({ soundVolume: 0 });\n      else this.setState({ soundVolume: 1 });\n    }\n  }\n\n  componentDidUpdate = () => {\n    this.backgroundMusic.volume = this.state.musicVolume;\n    this.soundsVolume = this.state.soundVolume;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <audio autoPlay>\n          <source src='./sound/backgroundMusic.mp3'></source>\n        </audio>\n        <HashRouter>\n          <Switch>\n            <Route\n              exact path=\"/\"\n              render={() => (\n                <HomePage\n                  gameType={this.getGameType}\n                  setVolume={this.setVolume}\n                />)}\n            />\n            <Route\n              path=\"/HouseSelection\"\n              render={() => (\n                <HouseSelection\n                  finalSelection={this.getFinalSelection}\n                  gameType={this.state.gameType}\n                />)}\n            />\n            <Route\n              path=\"/Fight\"\n              render={() => (\n                <Fight\n                  fightersHouse={this.state.fightersHouse}\n                  endTournament={this.endTournament}\n                  gameType={this.state.gameType}\n                  soundEffect={{\n                    musicVolume: this.state.musicVolume,\n                    effectsVolume: this.state.soundVolume,\n                  }}\n                />)}\n            />\n            <Route\n              path=\"/TournementVictory\"\n              render={() => (\n                <TournementVictory\n                  isEndTournament={this.state.isEndTournament}\n\n                />)}\n            />\n          </Switch>\n        </HashRouter>\n\n      </div>\n    );\n  }\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}